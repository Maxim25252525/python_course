"""
# Задача 1: Банковская карточка +1

Реализуйте класс 'Card', описывающий банковскую карточку. При создании
экземпляра класс должен принимать 3 аргумента:
- ФИО держателя карты.
- Наименование платежной системы.
- Пароль к карточке из 4 цифр.

Экземпляр класса 'Card' должен иметь следующие атрибуты:
- user - ФИО держателя карты. Публичный атрибут.
- payment_system - наименование платежной системы. Защищенный атрибут.
- number - номер карты. Приватный атрибут. Число из 16 цифр генерируется
случайным образом c помощью модуля random. Целочисленный тип.
- validity_period - срок действия карты. Защищенный атрибут. Устанавливается
как текущая дата + 3 года. Использует тип date из модуля datetime. Чтобы
получить текущую дату, воспользуйтесь функцией now из модуля datetime.datetime.
Чтобы прибавить 3 года, воспользуйтесь функцией replace из того же модуля.
- code_cv - трехзначный код карты. Приватный атрибут. Генерируется случайным
образом c помощью модуля random. Целочисленный тип.
- pin_code - пин-код к карточке из 4 цифр. Приватный атрибут.
Целочисленный тип. Если количество цифр в пин-коде отлично от четырех или
пин-код не состоит только из цифр - вызовите исключение типа ValueError с
описанием 'Ошибка установки пин-кода'.
- is_blocked - статус карты. Публичный атрибут. Логический тип.
False - карточка разблокирована. True - карточка заблокирована.
По умолчанию - False.
- balance - количество денег на карточке. Защищенный атрибут. Вещественный тип.
По умолчанию 0.

Класс должен иметь следующие методы экземпляра:
- get_payment_system - возвращает платежную систему карточки.
- get_number - возвращает последние 4 цифры номера карты в формате “***1234”.
- get_validity_period - возвращает срок действия карты в формате <месяц>/<год>.
Например: 11/30.
- block - блокировка карточки. Меняет статус карточки на True.
- get_money - Принимает на вход 2 аргумента: сумму для снятия (вещественный
тип) и пин-код (целочисленный тип).
Если пин-код подходит - происходит снятие средств. Если пин-код не подошел -
вызывается исключение типа PermissionError с описанием 'Неверный пин-код'.
Если на карточке меньше средств, чем количество денег для снятия, вызывается
исключение типа ValueError с описанием: 'Недостаточное количество средств'
- get_balance - возвращает количество средств на карте.
- put_money - Принимает на вход 2 аргумента: сумму для внесения (вещественный
тип) и пин-код (целочисленный тип).
Если пин-код подходит - происходит внесение средств. Если пин-код не подошел -
вызывается исключение типа PermissionError с описанием 'Неверный пин-код'.
Если количество средств для внесения меньше или равно 0, то вызывается
исключение типа ValueError c описанием: 'Количество средств для внесения должно
быть больше 0'.

Класс должен иметь следующий магический метод:
- __str__ - переопределение вывода объекта. Возвращает информацию по
карте в формате: 'Данная карта принадлежит <ФИО владельца>.'.
Например: 'Данна карта принадлежит Иванову Ивану Ивановичу.'

Класс должен иметь следующие статические методы:
- get_cv - возвращает вместо кода три звездочки в формате ***.
- get_info - возвращает правила пользования карточкой в формате:
```
Правила пользования карточкой:
1. Запомнить ПИН-код и нигде его не сохранять.
2. Не передавать карту другим людям.
3. Подключить push-уведомления или СМС-оповещения.
4. Бережно относиться к карточке.
5. Если карта потеряна, сразу же связаться с банком.
6. Не хранить крупную сумму.
```

Под блоком if __name__ == '__main__':
1. Создайте экземпляр класса, передав необходимые аргументы.
2. Проверьте взаимодействие с атрибутами и методами класса.

Добавьте докстринги (описание классов и методов) и аннотации типов (указание
типов параметров и возвращаемых значений) для каждого метода и класса.
"""
