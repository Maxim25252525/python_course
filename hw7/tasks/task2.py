"""
Задача 2: Поиск контакта +1

В современных телефонах есть приложение 'Контакты', где хранятся имена и номера
телефонов. Часто возникает необходимость найти номер телефона по имени
контакта. Напишите функцию 'search_contact'. Функция должна осуществлять поиск
контактов по введенному слову, игнорируя регистр букв.

Функция должна принимать 2 аргумента в следующем порядке:
- Строка по которой осуществляется поиск контактов (вводится пользователем).
- Словарь, где ключи (str) — это имена контактов, а значения (str) — их номера
телефонов (возвращается из функции 'create_dictionary_from_string').

Функция должна вернуть словарь, где ключи - имена найденных контактов,
а значения - номера телефонов.
Если ни один контакт не найден, функция должна вернуть строку 'Нет информации'.

Также напишите функцию 'create_dictionary_from_string', которая будет
преобразовывать строку CONTACTS из прекода в словарь, где ключи - имена и
фамилии контактов, а значения - номера телефонов.

Функция не должна принимать аргументов.
Функция должна вернуть сформированный словарь.


Под блоком if __name__ == '__main__':
1. Получите от пользователя строку, по которой будет осуществляться поиск
контактов.
2. Вызовите необходимые функции, передав им нужные аргументы.
3. Выведите результат работы функции 'search_contact'.

Добавьте докстринг (описание функции) и аннотацию типов (указание типов
параметров и возвращаемых значений) для функции.

Input:
```
билл
```

Output:
```
{'Билл Гейтс': '+79000375594', 'Билли Айлиш': '+79027539801'}
```
"""

CONTACTS = """Билл Гейтс +79000375594
Илон Маск +79024700417
Уоррен Баффетт +79086098273
Евгений Касперский +79302378514
Александр Шулико +79023342723
Билли Айлиш +79027539801
"""


def create_dictionary_from_string() -> dict[str, str]:
    """Функция преобразовывает строку CONTACTS в словарь.

    Returns:
        Возвращает словарь, где ключи - имена, а значения - номера телефонов.
    """

    contacts_dict = {}
    contacts_list = CONTACTS.split('\n')[:-1]
    for string in contacts_list:
        items = string.split()
        contacts_dict[f'{items[0]} {items[1]}'] = items[2]

    return contacts_dict


def search_contact(word: str, contacts: dict[str, str]) -> dict[str, str] | str:
    """Функция находит контакты по введенному слову.

    Args:
        word: Строка по которой осуществляется поиск.
        contacts: Словарь, где ключи — имена контактов, а значения - номер телефона.

    Returns:
        Возвращает словарь с контактами, найденными по заданному слову
        или строку в зависимости от наличия найденных контактов.
    """

    new_contacts = dict()
    for key in contacts.keys():
        if word.lower() in key.lower():
            new_contacts[key] = contacts[key]

    if not new_contacts:
        return "Нет информации"
    else:
        return new_contacts


if __name__ == '__main__':
    print(search_contact(input("Введите слово: "), create_dictionary_from_string()))
