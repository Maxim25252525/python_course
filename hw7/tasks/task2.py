"""
Задача 2: Поиск контакта +1

В современных телефонах есть приложение 'Контакты', где хранятся имена и номера
телефонов. Часто возникает необходимость найти номер телефона по имени
контакта. Напишите функцию 'search_contact'. Функция должна осуществлять поиск
контактов по введенному слову, игнорируя регистр букв.

Функция должна принимать 2 аргумента в следующем порядке:
- Строка по которой осуществляется поиск контактов (вводится пользователем).
- Словарь, где ключи (str) — это имена контактов, а значения (str) — их номера
телефонов (возвращается из функции 'create_dictionary_from_string').

Функция должна вернуть словарь, где ключи - имена найденных контактов,
а значения - номера телефонов.
Если ни один контакт не найден, функция должна вернуть строку 'Нет информации'.

Также напишите функцию 'create_dictionary_from_string', которая будет
преобразовывать строку CONTACTS из прекода в словарь, где ключи - имена и
фамилии контактов, а значения - номера телефонов.

Функция не должна принимать аргументов.
Функция должна вернуть сформированный словарь.


Под блоком if __name__ == '__main__':
1. Получите от пользователя строку, по которой будет осуществляться поиск
контактов.
2. Вызовите необходимые функции, передав им нужные аргументы.
3. Выведите результат работы функции 'search_contact'.

Добавьте докстринг (описание функции) и аннотацию типов (указание типов
параметров и возвращаемых значений) для функции.

Input:
```
билл
```

Output:
```
{'Билл Гейтс': '+79000375594', 'Билли Айлиш': '+79027539801'}
```
"""

CONTACTS = """Билл Гейтс +79000375594
Илон Маск +79024700417
Уоррен Баффетт +79086098273
Евгений Касперский +79302378514
Александр Шулико +79023342723
Билли Айлиш +79027539801
"""

# answer


def create_dictionary_from_string() -> dict[str, str]:
    """Формирует словарь контактов из строки"""
    contacts_dictionary = {}
    contacts_list = CONTACTS.strip().split("\n")

    for contact in contacts_list:
        name, surname, phone = contact.split()
        contacts_dictionary[f"{name} {surname}"] = phone

    return contacts_dictionary


def search_contact(
    name: str, phone_book: dict[str, str]
) -> str | dict[str, str]:
    """Ищет по названию контакта его телефон.
    Регистр не учитывается при поиске

    Args:
        name: Название контакта
        phone_book: Телефонная книжка

    Returns:
        Словарь с найденными контактами.
        Если телефон не нашелся - возвращает 'Нет информации'.
    """
    found_contacts = {
        key: value
        for key, value in phone_book.items()
        if name.lower() in key.lower()
    }
    return found_contacts if found_contacts else "Нет информации"


if __name__ == "__main__":
    contacts = create_dictionary_from_string()

    print(search_contact(input(), contacts))
